<?xml version="1.0" encoding="utf-8"?>
<!--   
  For more information on how to configure your ASP.NET application, please visit      
  http://go.microsoft.com/fwlink/?LinkId=152368                       
  -->
<configuration>
  <configSections>
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth">
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth" requirePermission="false" allowLocation="true" />
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <connectionStrings>
    <add name="ApplicationServices" connectionString="data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true"
      providerName="System.Data.SqlClient" />
    <add name="UserAuth" connectionString="Data Source=(LocalDB)\v11.0;AttachDbFilename=|DataDirectory|UserAuth.mdf;Initial Catalog=UserAuth;Integrated Security=True"
      providerName="System.Data.SqlClient" />
    <add name="Cache" connectionString="mongodb://rob:testtest@ds063158.mongolab.com:63158/robertbird"/>
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="1.0.0.0" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <!-- servicestack oauth config 
    <add key="oauth.twitter.ConsumerKey" value="yqeybHSZLzNZjXXtA44XZQ" />
    <add key="oauth.twitter.ConsumerSecret" value="dPHZv3V28OtbK93FM54upAtzoEymLQMbtBqufPuL4" />
    -->
    <add key="oauth.twitter.ConsumerKey" value="Jw0vJ56Xy2qxXE6gYMgzqQ" />
    <add key="oauth.twitter.ConsumerSecret" value="2JN1mmfdhoAx6Lqd5zX0BVZCziI91zGXsNxnCBjKHY" />
    <!-- production deployment config
    <add key="oauth.twitter.RedirectUrl" value="http://bootstrapapi.apphb.com/friends" />
    <add key="oauth.twitter.CallbackUrl" value="http://bootstrapapi.apphb.com/api/auth/twitter" /> -->
    <!-- local dev config -->
    <!---->
    <add key="oauth.twitter.RedirectUrl" value="http://localhost:1337/friends" />
    <add key="oauth.twitter.CallbackUrl" value="http://localhost:1337/api/auth/twitter" />
    <add key="oauth.facebook.Permissions" value="email,read_stream,offline_access" />
    <!--<add key="oauth.facebook.AppId" value="306256172736603" />
	  <add key="oauth.facebook.AppSecret" value="e52ff045b129123f86ee9ef2b9f56e1a" />-->
    <add key="oauth.facebook.AppId" value="330536427004595" />
    <add key="oauth.facebook.AppSecret" value="ab62d5d33dbe10f54a365bb8ac684a64" />
    <add key="oauth.facebook.RedirectUrl" value="http://bootstrapapi.apphb.com/friends" />
    <add key="oauth.facebook.CallbackUrl" value="http://bootstrapapi.apphb.com/api/auth/facebook" />
    <!-- Provide explicit urls to work around AppHarbors hosting on internal port polluting redirects -->
    <add key="oauth.GoogleOpenId.RedirectUrl" value="http://bootstrapapi.apphb.com/friends" />
    <add key="oauth.GoogleOpenId.CallbackUrl" value="http://bootstrapapi.apphb.com/api/auth/GoogleOpenId" />
    <add key="oauth.YahooOpenId.RedirectUrl" value="http://bootstrapapi.apphb.com/friends" />
    <add key="oauth.YahooOpenId.CallbackUrl" value="http://bootstrapapi.apphb.com/api/auth/YahooOpenId" />
    <add key="oauth.OpenId.RedirectUrl" value="http://bootstrapapi.apphb.com/friends" />
    <add key="oauth.OpenId.CallbackUrl" value="http://bootstrapapi.apphb.com/api/auth/OpenId" />
    <add key="RecreateAuthTables" value="True" />
    <add key="AdminUserNames" value="demis.bellot@gmail.com" />
  </appSettings>
  <location path="api">
    <system.web>
      <customErrors mode="Off" />
      <httpHandlers>
        <add path="*" type="ServiceStack.WebHost.Endpoints.ServiceStackHttpHandlerFactory, ServiceStack" verb="*" />
      </httpHandlers>
    </system.web>
    <!-- Required for IIS 7.0 -->
    <system.webServer>
      <modules runAllManagedModulesForAllRequests="true" />
      <validation validateIntegratedModeConfiguration="false" />
      <handlers>
        <add path="*" name="ServiceStack.Factory" type="ServiceStack.WebHost.Endpoints.ServiceStackHttpHandlerFactory, ServiceStack" verb="*" preCondition="integratedMode" resourceType="Unspecified" allowPathInfo="true" />
      </handlers>
    </system.webServer>
  </location>
  <system.web>
    <customErrors mode="Off" />
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </assemblies>
    </compilation>
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    <httpHandlers>
      <add path="api*" type="ServiceStack.WebHost.Endpoints.ServiceStackHttpHandlerFactory, ServiceStack" verb="*" />
    </httpHandlers>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <defaultDocument>
      <files>
        <add value="default.html" />
      </files>
    </defaultDocument>
  </system.webServer>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
	     which is necessary for OpenID urls with unicode characters in the domain/host name. 
	     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
  <system.net>
    <defaultProxy enabled="true" useDefaultCredentials="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <runtime>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		-->
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.2.0.0" newVersion="4.2.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <dotNetOpenAuth>
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth" />
        </behaviors>
      </relyingParty>
    </openid>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
  </dotNetOpenAuth>
</configuration>